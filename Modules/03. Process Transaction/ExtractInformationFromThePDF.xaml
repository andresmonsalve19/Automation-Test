<Activity mc:Ignorable="sap sap2010" x:Class="ExtractInformationFromThePDF" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Dic_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Str_WorkItemID" Type="InArgument(x:String)" />
    <x:Property Name="out_Str_ClientName" Type="OutArgument(x:String)" />
    <x:Property Name="out_Str_ClientID" Type="OutArgument(x:String)" />
    <x:Property Name="out_Str_CheckNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_Str_CheckDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_Str_CheckAmount" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ExtractInformationFromThePDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF.ExtractPDFText</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This module is used to extract the information from the check request PDF document corresponding to the current work item. The Information extracted is the Client Name, Client ID, Check Number, Check Data and Check Amount." DisplayName="ExtractInformationFromThePDF" sap:VirtualizedContainerService.HintSize="1249,869" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Str_TextExtractedFromPDF" />
      <Variable x:TypeArguments="x:String" Name="Str_Pattern" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Print Module Start [ExtractInformationFromThePDF]" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;[ExtractInformationFromThePDF] --&gt; Process starting...&quot;]" />
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text - Check Request" FileName="[in_Dic_Config(&quot;DownloadsFolderPath&quot;).ToString + in_Str_WorkItemID + &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[Str_TextExtractedFromPDF]" />
    <Assign sap2010:Annotation.AnnotationText="Regex pattern used to extract  the Client Name, Client ID, Check Number, Check Data and Check Amount from the text." DisplayName="Assign - &lt;Str_Pattern&gt; [ExtractInformationFromThePDF]" sap:VirtualizedContainerService.HintSize="434,156" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Str_Pattern]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Dic_Config("Pattern").ToString]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim Str_ClientNamePattern As String = &quot;Client Name\s+(?&lt;client_name&gt;\w+\s+\w+)&quot;&#xD;&#xA;Dim Str_ClientIDPattern As String = &quot;Client ID\s+(?&lt;client_id&gt;\w+)&quot;&#xD;&#xA;Dim Str_CheckNumberPattern As String = &quot;Check Number\s+(?&lt;check_number&gt;\d+)&quot;&#xD;&#xA;Dim Str_CheckDatePattern As String = &quot;Check Date\s+(?&lt;check_date&gt;\d+\-\d+\-\d+)&quot;&#xD;&#xA;Dim Str_CheckAmountPattern As String = &quot;Check Amount\s+(?&lt;check_amount&gt;\d+\s\w+)&quot;&#xD;&#xA;&#xD;&#xA;Dim matchClientName As Match = Regex.Match(in_Str_Text, Str_ClientNamePattern)&#xD;&#xA;Dim matchClientID As Match = Regex.Match(in_Str_Text, Str_ClientIDPattern)&#xD;&#xA;Dim matchCheckNumber As Match = Regex.Match(in_Str_Text, Str_CheckNumberPattern)&#xD;&#xA;Dim matchCheckDate As Match = Regex.Match(in_Str_Text, Str_CheckDatePattern)&#xD;&#xA;Dim matchCheckAmount As Match = Regex.Match(in_Str_Text, Str_CheckAmountPattern)&#xD;&#xA;&#xD;&#xA;If matchClientName.Success Then&#xD;&#xA;&#x9;Out_Str_ClientName = matchClientName.Groups(&quot;client_name&quot;).Value&#xD;&#xA;    Console.WriteLine(&quot;Client Name: &quot; &amp; Out_Str_ClientName)&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If matchClientID.Success Then&#xD;&#xA;&#x9;Out_Str_ClientID = matchClientID.Groups(&quot;client_id&quot;).Value&#xD;&#xA;    Console.WriteLine(&quot;Client ID: &quot; &amp; Out_Str_ClientID)&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If matchCheckNumber.Success Then&#xD;&#xA;&#x9;Out_Str_CheckNumber = matchCheckNumber.Groups(&quot;check_number&quot;).Value&#xD;&#xA;    Console.WriteLine(&quot;Check Number: &quot; &amp; Out_Str_CheckNumber)&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If matchCheckDate.Success Then&#xD;&#xA;&#x9;Out_Str_CheckDate = matchCheckDate.Groups(&quot;check_date&quot;).Value&#xD;&#xA;    Console.WriteLine(&quot;Check Date: &quot; &amp; Out_Str_CheckDate)&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If matchCheckAmount.Success Then&#xD;&#xA;&#x9;Out_Str_CheckAmount = matchCheckAmount.Groups(&quot;check_amount&quot;).Value&#xD;&#xA;    Console.WriteLine(&quot;Check Amout: &quot; &amp; Out_Str_CheckAmount)&#xD;&#xA;End If" DisplayName="Invoke Code - Get Information Using RegEx" sap:VirtualizedContainerService.HintSize="434,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Str_Text">[Str_TextExtractedFromPDF]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Str_Pattern">[Str_Pattern]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_Str_ClientName">[out_Str_ClientName]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_Str_ClientID">[out_Str_ClientID]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_Str_CheckNumber">[out_Str_CheckNumber]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_Str_CheckDate">[out_Str_CheckDate]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_Str_CheckAmount">[out_Str_CheckAmount]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message - Print Module End [ExtractInformationFromThePDF]" sap:VirtualizedContainerService.HintSize="434,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;[ExtractInformationFromThePDF] --&gt; Process finished.&quot;]" />
  </Sequence>
</Activity>